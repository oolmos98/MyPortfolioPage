{"version":3,"file":"static/js/5347.5e89fc67.chunk.js","mappings":"4NAEA,SAASA,EAAeC,EAAWC,EAAUC,EAAeC,EAAMC,GAC9D,IAAMC,EAAiBL,EAAUM,cAAcC,cAAcC,MAAMC,QACnE,GAAKJ,EAAL,CAGA,IALuE,EAKjEK,EAAQV,EAAUW,UAAUC,SAASF,MAAMP,EAAMC,GALgB,UAMhDM,GANgD,IAMvE,2BAA8B,KAAnBG,EAAmB,QAC1B,GAA6BC,EAAAA,EAAAA,IAAaD,EAASZ,SAAUA,GAArDc,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,SAAwDC,EAAWb,EAAec,MAAQd,EAAee,OAAQC,GAAgBC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAUlB,EAAemB,OAAzBD,CAR/H,EAQ2KN,EAAWf,GAAiBgB,EARrN,EAQ0Ob,EAAeoB,UAAWC,EAAUC,EAAAA,GAAAA,OAAeV,EAAuBF,EAAKE,EAAYI,EAA7BH,EAA6CD,EAAuBD,EAAKC,EAAYI,EAA7BH,GAC1WL,EAASZ,SAAS2B,QAAQF,IARyC,gCAWpE,SAASG,EAAa7B,EAAW8B,GAC/B9B,EAAUS,UACXT,EAAUS,QAAU,CAAEE,UAAW,KAErC,IAAQF,EAAYT,EAAZS,QAUR,GATKA,EAAQsB,SACJtB,EAAQuB,QACTvB,EAAQuB,MAAQ,GAEpBvB,EAAQuB,QACJvB,EAAQuB,QAAUhC,EAAUW,UAAUqB,QACtCvB,EAAQsB,QAAS,IAGrBtB,EAAQwB,SAAU,CAClB,IAAMC,EAAWlC,EAAUO,cAAc4B,MAAMC,cAAelC,EAAgBF,EAAUqC,OAAOC,oBAC/F,IAAKpC,GAAiBA,EA5BiB,IA4BagC,EAChD,OAEJnC,EAAeC,EAAWkC,EAAUhC,EAAe,IAAIqC,EAAAA,GAAOL,EAASM,EAAGN,EAASO,EAAGvC,IAAgB,SAACwC,GAAD,OAAOZ,EAAUY,WAE7F,IAArBjC,EAAQwB,WACbxB,EAAQE,UAAY,IAGrB,SAASgC,EAAa3C,EAAW8B,GACpC,IAAMI,EAAWlC,EAAUO,cAAc4B,MAAMlC,SAAUC,EAAgBF,EAAUqC,OAAOC,qBACrFpC,GAAiBA,EAvCqB,IAuCSgC,GAGpDnC,EAAeC,EAAWkC,EAAUhC,EAAe,IAAIqC,EAAAA,GAAOL,EAASM,EAAGN,EAASO,EAAGvC,IAAgB,SAACwC,GAAD,OAAOZ,EAAUY","sources":["../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js"],"sourcesContent":["import { Circle, Vector, clamp, getDistances, getEasing, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n"],"names":["processAttract","container","position","attractRadius","area","queryCb","attractOptions","actualOptions","interactivity","modes","attract","query","particles","quadTree","particle","getDistances","dx","dy","distance","velocity","speed","factor","attractFactor","clamp","getEasing","easing","maxSpeed","normVec","Vector","subFrom","clickAttract","enabledCb","finish","count","clicking","mousePos","mouse","clickPosition","retina","attractModeDistance","Circle","x","y","p","hoverAttract"],"sourceRoot":""}