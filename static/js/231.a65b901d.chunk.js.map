{"version":3,"file":"static/js/231.a65b901d.chunk.js","mappings":"wJAEO,MAAMA,EACTC,WAAAA,CAAYC,GACRC,KAAKD,UAAYA,CACrB,CACA,UAAME,CAAKC,GACP,MAAMH,EAAYC,KAAKD,UAAWI,EAAUD,EAASC,QAC/CC,GAASC,EAAAA,EAAAA,IAAyBF,EAAQC,OAAQF,EAASI,GAAIH,EAAQI,kBAC7EL,EAASM,aAAcC,EAAAA,EAAAA,IAAcL,EAAOM,OAASX,EAAUY,OAAOC,WACtEV,EAASW,eAAgBJ,EAAAA,EAAAA,IAAcL,EAAOU,SAT/B,GAUfZ,EAASa,gBAAkBX,EAAOY,OAAOC,UACzC,MAAMC,GAAiBC,EAAAA,EAAAA,IAAgBf,EAAOY,QAAUd,EAASkB,eAC7DF,IACAhB,EAASmB,aAAcC,EAAAA,EAAAA,IAAuBJ,EAAgBhB,EAASa,gBAAiBhB,EAAUY,OAAOY,qBAEvGC,QAAQC,SAClB,CACAC,SAAAA,CAAUxB,GACN,MAAMc,EAAQd,EAASa,iBAAiB,YAAEM,GAAgBnB,EAC1D,OAASA,EAASyB,YACbzB,EAAS0B,YACRZ,SACyBa,IAAzBR,GAAaS,EAAEC,OAAuBV,EAAYS,EAAEE,aACxBH,IAAzBR,GAAaY,EAAEF,OAAuBV,EAAYY,EAAED,aAC3BH,IAAzBR,GAAaa,EAAEH,OAAuBV,EAAYa,EAAEF,OACjE,CACA,YAAMG,CAAOjC,EAAUkC,GACdpC,KAAK0B,UAAUxB,MAGpBmC,EAAAA,EAAAA,IAAYnC,EAASmB,YAAae,SAC5BZ,QAAQC,UAClB,E","sources":["../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    async init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["StrokeColorUpdater","constructor","container","this","init","particle","options","stroke","itemFromSingleOrMultiple","id","reduceDuplicates","strokeWidth","getRangeValue","width","retina","pixelRatio","strokeOpacity","opacity","strokeAnimation","color","animation","strokeHslColor","rangeColorToHsl","getFillColor","strokeColor","getHslAnimationFromHsl","reduceFactor","Promise","resolve","isEnabled","destroyed","spawning","undefined","h","value","enable","s","l","update","delta","updateColor"],"sourceRoot":""}