{"version":3,"file":"static/js/7633.a08710ab.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return Promise.resolve(undefined);\n        }\n        return cb(ctx);\n    }\n    async drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        await this.drawAsync(async (ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            await drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    async drawParticlePlugin(plugin, particle, delta) {\n        await this.drawAsync((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    async drawPlugin(plugin, delta) {\n        await this.drawAsync((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        await container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = async (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                await this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = async (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    const { Particle } = await import(\"./Particle.js\");\n                    particle = new Particle(this._engine, this._container);\n                }\n                await particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    async addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            await this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    async addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return await this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            await canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            await p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        await this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    await this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                await this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            await pathGenerator.init(container);\n        }\n    }\n    async push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            await this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    async setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            await this._applyDensity(groups[group], manualCount, group);\n        }\n        await this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            await plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    await mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                await updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = async (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => void frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        await this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","undefined","setStyle","canvas","style","important","element","elementStyle","value","setProperty","Canvas","container","this","_applyPostDrawUpdaters","particle","_postDrawUpdaters","updater","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","plugin","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","options","actualOptions","cover","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","length","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","paint","clear","stop","remove","cb","delta","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","drawAsync","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","strokeOpacity","zStrokeOpacity","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","obs","safeMutationObserver","records","record","type","attributeName","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","e","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","windowResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","resizeEvent","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","interactor","isEnabled","interact","getInteractors","reset","Point","half","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","Math","round","_divided","_points","point","contains","some","sub","insert","range","check","res","intersects","p","getDistance","query","Circle","qTreeRectangle","canvasSize","Particles","_addToPool","_pool","_applyDensity","manualCount","group","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","overrideOptions","initializer","pop","Particle","_nextId","canAdd","_array","_zArray","dispatchEvent","data","warning","errorPrefix","_removeParticle","index","override","zIdx","indexOf","splice","destroy","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","movers","manualParticles","addParticle","getPosition","limitOptions","get","currentCount","countToRemove","update","condition","particlesInitialization","addManualParticles","particlesOptions","groups","groupOptions","j","getMovers","getUpdaters","pathGenerators","pathGenerator","nb","removeAt","quantity","minIndex","deleted","_resizeFactor","particlesToDelete","Set","resizeFactor","ignoresResizeRatio","initialPosition","particleUpdate","mover","checkDelete","has","externalInteract","particlesInteract","zArray","sort","b","z","id","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","moveOptions","maxSpeed","getRangeValue","gravity","sizeAnimationSpeed","animation","speed","moveDistance","distance","props","moveDrift","drift","moveSpeed","maxDistance","horizontal","vertical","guardCheck","defaultFps","initDelta","fpsLimit","smooth","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","zLayers","_sourceOptions","_initialSourceOptions","effectDrawers","shapeDrawers","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","el","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","max","radiusX","radiusY","generator","effectDrawer","shapeDrawer","keys","clearPlugins","mainArr","dom","idx","findIndex","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","effects","getSupportedEffects","drawer","getEffectDrawer","shapes","getSupportedShapes","getShapeDrawer","getAvailablePlugins","availablePlugins","duration","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","autoPlay","start","addListeners","HTMLElement","_delayTimeout","removeListeners","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}