{"version":3,"file":"static/js/8512.65e3034f.chunk.js","mappings":"0NACaA,EAAb,WACI,WAAYC,IAAW,eACnBC,KAAKD,UAAYA,EAFzB,oEAII,WAAWE,GAAX,8EACUC,EAAiBD,EAASE,QAAQC,QAAmB,EAC3DH,EAASG,SAAUC,EAAAA,EAAAA,IAAkCH,EADM,IAErDI,EAAmBJ,EAAeK,WACnBC,SACjBP,EAASG,QAAQK,UACZC,EAAAA,EAAAA,IAAcJ,EAAiBK,OAASC,EAAAA,GAAsBZ,KAAKD,UAAUc,OAAOC,aACpFR,EAAiBS,OAClBd,EAASG,QAAQK,WAAYO,EAAAA,EAAAA,QARzC,SAWUC,QAAQC,UAXlB,gDAJJ,8EAiBI,SAAUjB,GAAU,YAEhB,OAASA,EAASkB,YACblB,EAASmB,YACRnB,EAASG,SACXH,EAASG,QAAQI,UAChB,UAACP,EAASG,QAAQiB,gBAAlB,QALQ,QAMJ,UAACpB,EAASG,QAAQiB,gBAAlB,QANI,OAOD,UAACpB,EAASG,QAAQkB,aAAlB,QAPC,IAOD,UAAoCrB,EAASG,QAAQiB,gBAArD,QAPC,MAlBrB,mBA2BI,SAAMpB,GACEA,EAASG,UACTH,EAASG,QAAQmB,KAAO,EACxBtB,EAASG,QAAQkB,MAAQ,KA9BrC,qDAiCI,WAAarB,EAAUuB,GAAvB,kEACSxB,KAAKyB,UAAUxB,IAAcA,EAASG,QAD/C,wDAIIsB,EAAAA,EAAAA,IAAgBzB,EAAUA,EAASG,SAAS,EAAMH,EAASE,QAAQC,QAAQG,UAAUoB,QAASH,GAJlG,SAKUP,QAAQC,UALlB,gDAjCJ","sources":["../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    async init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["OpacityUpdater","container","this","particle","opacityOptions","options","opacity","initParticleNumericAnimationValue","opacityAnimation","animation","enable","velocity","getRangeValue","speed","percentDenominator","retina","reduceFactor","sync","getRandom","Promise","resolve","destroyed","spawning","maxLoops","loops","time","delta","isEnabled","updateAnimation","destroy"],"sourceRoot":""}