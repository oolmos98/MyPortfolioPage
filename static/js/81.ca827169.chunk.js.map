{"version":3,"file":"static/js/81.ca827169.chunk.js","mappings":"6OAEMA,EAAa,SACNC,EAAb,0CACI,WAAYC,GAAW,kCACbA,GAFd,oCAII,cAJJ,kBAMI,WACI,IAAMA,EAAYC,KAAKD,UAAWE,EAASF,EAAUG,cAAcC,cAAcC,MAAMH,OAClFA,IAGLF,EAAUM,OAAOC,mBAAqBL,EAAOM,SAAWR,EAAUM,OAAOG,cAXjF,uDAaI,4GACUT,EAAYC,KAAKD,UAAWU,EAAUV,EAAUG,cAAeQ,EAASD,EAAQN,cAAcO,OAAQC,EAAkBZ,EAAUI,cAAcS,SAAWC,EAAAA,GAAgBC,EAAeJ,EAAOK,QAAQC,OAAQC,EAAYP,EAAOK,QAAQG,KAAMC,EAAOT,EAAOU,QAClQT,GAAmBG,IAAgBO,EAAAA,EAAAA,IAAUxB,EAAYoB,IAFjE,gCAGsC,+BAHtC,iBAGgBK,EAHhB,EAGgBA,aACItB,KAAKD,WAAW,SAACwB,GAAD,OAAO,EAAKC,UAAUD,MAJ1D,wCAOoC,+BAPpC,kBAOgBE,EAPhB,EAOgBA,WACEzB,KAAKD,UAAWoB,EAAMtB,GAAY,SAAC0B,GAAD,OAAO,EAAKC,UAAUD,MAR1E,iDAbJ,6EAwBI,SAAUG,GAAU,MACV3B,EAAYC,KAAKD,UAAWU,EAAUV,EAAUG,cAAeyB,EAAQ5B,EAAUI,cAAcwB,MAAOjB,GAAS,iBAACgB,QAAD,IAACA,OAAD,EAACA,EAAUvB,qBAAX,QAA4BM,EAAQN,eAAeO,OAAQS,EAAOT,EAAOU,MAC9L,QAAWO,EAAMC,UAAYlB,EAAOK,QAAQC,SAAUK,EAAAA,EAAAA,IAAUxB,EAAYa,EAAOK,QAAQG,QACvFW,EAAAA,EAAAA,IAAiBhC,EAAYsB,KA3BzC,6BA6BI,SAAgBV,GACPA,EAAQR,SACTQ,EAAQR,OAAS,IAAI6B,EAAAA,GAFQ,2BAATC,EAAS,iCAATA,EAAS,kBAIjC,cAAqBA,EAArB,eAA8B,CAAzB,IAAMC,EAAM,KACbvB,EAAQR,OAAOgC,KAAf,OAAoBD,QAApB,IAAoBA,OAApB,EAAoBA,EAAQ/B,WAlCxC,mBAqCI,gBArCJ,GAA6BiC,EAAAA","sources":["../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js"],"sourcesContent":["import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            const { mouseBounce } = await import(\"./Utils.js\");\n            mouseBounce(this.container, (p) => this.isEnabled(p));\n        }\n        else {\n            const { divBounce } = await import(\"./Utils.js\");\n            divBounce(this.container, divs, bounceMode, (p) => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],"names":["bounceMode","Bouncer","container","this","bounce","actualOptions","interactivity","modes","retina","bounceModeDistance","distance","pixelRatio","options","events","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","onHover","enable","hoverMode","mode","divs","onDiv","isInArray","mouseBounce","p","isEnabled","divBounce","particle","mouse","position","isDivModeEnabled","Bounce","sources","source","load","ExternalInteractorBase"],"sourceRoot":""}