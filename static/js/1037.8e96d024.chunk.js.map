{"version":3,"file":"static/js/1037.8e96d024.chunk.js","mappings":"oPAEaA,EAAb,0CACI,WAAYC,EAAGC,EAAGC,EAAQC,GAAY,6BAClC,cAAMH,EAAGC,EAAGC,IACPC,WAAaA,EAClB,EAAKA,YAAL,UAAuBA,GAHW,EAD1C,uCAMI,SAASC,GACL,MAA0BC,KAAKF,WAAvBG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAA8BP,EAASI,EAATJ,EAAGC,EAAMG,EAANH,EAChD,OAAQ,uDAAeG,KAAf,uDACW,CAAEJ,EAAGA,EAAIM,EAAOL,EAAAA,MAD3B,uDAEW,CAAED,EAAGA,EAAIM,EAAOL,EAAGA,EAAIM,MAFlC,uDAGW,CAAEP,EAAAA,EAAGC,EAAGA,EAAIM,MAXvC,wBAaI,SAAWC,GACP,6DAAqBA,GACjB,OAAO,EAEX,IAAMC,EAAOD,EAAOE,EAASF,EAAOG,EAAS,CACzCX,EAAGQ,EAAMI,SAASZ,EAAIK,KAAKF,WAAWG,MACtCL,EAAGO,EAAMI,SAASX,EAAII,KAAKF,WAAWI,QAE1C,QAAsBM,IAAlBH,EAAOR,OAAsB,CAC7B,IAAMY,EAAe,IAAIC,EAAAA,GAAOJ,EAAOX,EAAGW,EAAOV,EAvB9C,EAuBiDS,EAAOR,QAC3D,gEAAwBY,GAEvB,QAAkBD,IAAdJ,EAAKO,KAAoB,CAC9B,IAAMC,EAAS,IAAIC,EAAAA,GAAUP,EAAOX,EAAGW,EAAOV,EA3B3C,EA2B8CQ,EAAKO,KAAKV,MA3BxD,EA2BwEG,EAAKO,KAAKT,QACrF,gEAAwBU,GAE5B,OAAO,MA7Bf,GAAgCF,EAAAA","sources":["../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js"],"sourcesContent":["import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n"],"names":["CircleWarp","x","y","radius","canvasSize","point","this","width","height","range","rect","circle","newPos","position","undefined","biggerCircle","Circle","size","rectSW","Rectangle"],"sourceRoot":""}