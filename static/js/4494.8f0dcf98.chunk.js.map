{"version":3,"file":"static/js/4494.8f0dcf98.chunk.js","mappings":"mJAEO,MAAMA,EACT,UAAMC,CAAKC,GACP,MAAMC,EAAYD,EAASC,UAAgDC,EAAvBF,EAASG,QAAQC,KAAkCC,UACnGH,EAAcI,SACdN,EAASI,KAAKG,UACRP,EAASQ,OAAOC,oBAAsBR,EAAUO,OAAOC,oBAAsBC,EAAAA,GAC3ET,EAAUO,OAAOG,aACpBT,EAAcU,OACfZ,EAASI,KAAKG,WAAYM,EAAAA,EAAAA,cAG5BC,QAAQC,SAClB,CACAC,SAAAA,CAAUhB,GACN,OAASA,EAASiB,YACbjB,EAASkB,UACVlB,EAASI,KAAKE,UACZN,EAASI,KAAKe,UAlBX,QAmBCnB,EAASI,KAAKe,UAnBf,OAoBInB,EAASI,KAAKgB,OApBlB,IAoBwCpB,EAASI,KAAKe,UApBtD,GAqBb,CACAE,KAAAA,CAAMrB,GACFA,EAASI,KAAKgB,MAvBL,CAwBb,CACA,YAAME,CAAOtB,EAAUuB,GACdC,KAAKR,UAAUhB,MAGpByB,EAAAA,EAAAA,IAAgBzB,EAAUA,EAASI,MAAM,EAAMJ,EAASG,QAAQC,KAAKC,UAAUqB,QAASH,SAClFT,QAAQC,UAClB,E","sources":["../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js"],"sourcesContent":["import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    async init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["SizeUpdater","init","particle","container","sizeAnimation","options","size","animation","enable","velocity","retina","sizeAnimationSpeed","percentDenominator","reduceFactor","sync","getRandom","Promise","resolve","isEnabled","destroyed","spawning","maxLoops","loops","reset","update","delta","this","updateAnimation","destroy"],"sourceRoot":""}